# Vault Helm Chart Value Overrides
global:
  enabled: true
  tlsDisable: false # We want TLS enabled
  # WAS: tlsDisable: true

injector:
  enabled: true
  image:
    repository: "hashicorp/vault-k8s"
    tag: "1.3.1" # CHANGED: Updated from 0.14.1 -> 1.3.1 (latest July 2025)
  resources:
    requests:
      memory: 50Mi
      cpu: 50m
    limits:
      memory: 256Mi
      cpu: 250m

server:
  image:
    repository: "hashicorp/vault"
    tag: "1.20.2" # CHANGED: Updated from 1.9.2 -> 1.20.2 (latest July 2025)

  resources:
    requests:
      memory: 256Mi # CHANGED: Lowered for homelab
      cpu: 200m # WAS: memory 50Mi, cpu 500m
    limits:
      memory: 512Mi # CHANGED: Lowered from 16Gi (overkill)
      cpu: 500m # WAS: cpu 2000m

  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
  livenessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true"
    initialDelaySeconds: 60

  extraEnvironmentVars:
    VAULT_CACERT: /vault/userconfig/tls/tls.crt
    # CHANGED: Adjusted path for consistency

  extraVolumes:
    - type: secret
      name: lab-felopater-codes-production-tls # CHANGED: Using your existing TLS secret
    # WAS: tls-server, tls-ca (old secrets for self-signed certs)

  standalone:
    enabled: false

  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true # CHANGED: Switched from Consul to Raft
      setNodeId: true
      config: |
        ui = true
        listener "tcp" {
          address       = "0.0.0.0:8200"
          cluster_address = "0.0.0.0:8201"
          tls_cert_file = "/vault/userconfig/tls/tls.crt"
          tls_key_file  = "/vault/userconfig/tls/tls.key"
          tls_min_version = "tls12"
        }
        storage "raft" {
          path = "/vault/data"
        }
    # WAS:
    # storage "consul" {
    #   path = "vault"
    #   address = "consul-consul-server:8500"
    # }

ui:
  enabled: true
  externalPort: 8200
  serviceType: "LoadBalancer"
  # CHANGED: Added serviceType explicitly to expose UI for testing
